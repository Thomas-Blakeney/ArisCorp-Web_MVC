// <auto-generated />
using ArisCorpWeb.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ArisCorpWeb.Migrations.Technologien
{
    [DbContext(typeof(TechnologienContext))]
    partial class TechnologienContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ArisCorpWeb.Models.Technologien", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Content1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content11")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content12")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content13")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content14")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content15")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content16")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content17")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content18")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content19")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content20")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content21")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content22")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content23")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content24")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content25")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content26")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content27")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content28")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content29")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content30")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Extra1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Extra2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Extra3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Extra4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Extra5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rasse")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Technologien");
                });
#pragma warning restore 612, 618
        }
    }
}
